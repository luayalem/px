### create repl3 storageclass
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: px-mysql-sc
provisioner: kubernetes.io/portworx-volume
parameters:
  repl: "3"
  io_profile: "db_remote"
allowVolumeExpansion: true
reclaimPolicy: Delete
volumeBindingMode: Immediate
---
# create mysql namespace
apiVersion: v1
kind: Namespace
metadata:
  name: mysql
---
# create pvc for mysql deployment
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: px-mysql-pvc
  namespace: mysql
  annotations:
    volume.beta.kubernetes.io/storage-class: px-mysql-sc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
