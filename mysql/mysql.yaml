### create repl3 storageclass
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: px-mysql-sc
provisioner: kubernetes.io/portworx-volume
parameters:
  repl: "3"
  io_profile: "db_remote"
allowVolumeExpansion: true
reclaimPolicy: Delete
volumeBindingMode: Immediate
---
# create mysql namespace
apiVersion: v1
kind: Namespace
metadata:
  name: mysql
---
# create pvc for mysql deployment
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: px-mysql-pvc
  namespace: mysql
  annotations:
    volume.beta.kubernetes.io/storage-class: px-mysql-sc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mysql
  namespace: mysql
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      schedulerName: stork
      containers:
      - name: mysql
        image: mysql:5.6.32
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 5432
        env:
        - name: MYSQL_USER
          value: mysql
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password.txt
        - name: MYSQL_DATABASE
          value: pxdemo
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password.txt
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql
      volumes:
      - name: mysql
        persistentVolumeClaim:
          claimName: px-mysql-pvc

